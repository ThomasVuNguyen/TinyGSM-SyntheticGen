{
  "bedrock_models": {
    "nova-pro": {
      "model_id": "amazon.nova-pro-v1:0",
      "api_key": "your_bedrock_api_key_here",
      "region": "us-east-1",
      "max_tokens": 2000,
      "temperature": 0.7
    }
  },
  "deployment": "nova-pro",
  "limit": null,
  "output_file": "TinyGSM-nova-pro.json",
  "upload_to_hf": false,
  "hf_repo": "your-username/TinyGSM-nova-pro",
  "dataset_name": "TinyGSM-nova-pro",
  "prompt": "Solve this EXACT problem with Python code in this format:\n\ndef simple_math_problem() -> float:\n\"\"\"\n[Copy the EXACT problem statement word-for-word]\n\"\"\"\n[Variable assignments with descriptive names]\n[Calculate step by step]\nresult = [final calculation]\n\nreturn result\n\nExample - if the problem was:\n\"Mark has 10 crayons. He gives 2 crayons to his younger sister and loses another 4 while he was playing. How many crayons does Mark have left?\"\n\nThen the solution would be:\ndef simple_math_problem() -> int:\n\"\"\"\nMark has 10 crayons. He gives 2 crayons to his younger sister and loses another 4 while he was playing. How many crayons does Mark have left?\n\"\"\"\ncrayonsTotal = 10\ncrayonsGiven = 2\ncrayonsLost = 4\ncrayonsLeft = crayonsTotal - crayonsGiven - crayonsLost\nresult = crayonsLeft\n\nreturn result\n\nSolve the EXACT problem given above, do not create a new problem:"
}